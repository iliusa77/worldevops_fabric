from sentry.conf.server import *
import os.path

CONF_ROOT = os.path.dirname(__file__)
SENTRY_PROJECT = {{PROJECT}}

DATABASES = {{DATABASES}}
SENTRY_KEY = '{{SECRET_KEY}}'

# Set this to false to require authentication
SENTRY_PUBLIC = False

# You should configure the absolute URI to Sentry. It will attempt to guess it if you don't
# but proxies may interfere with this.
# SENTRY_URL_PREFIX = 'http://sentry.example.com'  # No trailing slash!
SENTRY_URL_PREFIX = 'http://sentry.{{DOMAIN}}'

SENTRY_WEB_HOST = '{{HOST}}'
SENTRY_WEB_PORT = {{PORT}}
SENTRY_WEB_OPTIONS = {
    'workers': 3,  # the number of gunicorn workers
    # 'worker_class': 'gevent',
}

# Mail server configuration

# For more information check Django's documentation:
#  https://docs.djangoproject.com/en/1.3/topics/email/?from=olddocs#e-mail-backends

SENTRY_OPTIONS['system.admin-email'] = '{{ADMIN_EMAIL}}'
SENTRY_OPTIONS['mail.backend'] = 'django.core.mail.backends.smtp.EmailBackend'
SENTRY_OPTIONS['mail.host'] = 'localhost'
SENTRY_OPTIONS['mail.username'] = ''
SENTRY_OPTIONS['mail.password'] = ''
SENTRY_OPTIONS['mail.port'] = 25
SENTRY_OPTIONS['mail.use-tls']  = False

SENTRY_EMAIL_SUBJECT_PREFIX = '[Sentry] '

import logging
SENTRY_MAIL_LEVEL = logging.DEBUG


ADMINS=()
SENTRY_ADMINS=('admin@{{DOMAIN}}')
SENTRY_SERVER_EMAIL='sentry@{{DOMAIN}}'

BROKER_URL = '{{BROKER_URL}}'

CELERY_ALWAYS_EAGER = (
    'sentry.tasks.cleanup.cleanup',
    'sentry.tasks.post_process.post_process_group',
    'sentry.tasks.process_buffer.process_incr',
)

SENTRY_BUFFER = 'sentry.buffer.redis.RedisBuffer'

SENTRY_OPTIONS['buffer'] = {
    'hosts': {
        0: {
            'host': '{{REDIS_HOST}}' ,
            'port': {{REDIS_PORT}},
            'password': '{{REDIS_PASSWORD}}'
        }
    }
}

CACHES = {{CACHES}}

SENTRY_OPTIONS['redis'] = {
    'clusters': {
        0: {
            'host': '{{REDIS_HOST}}',
            'port': {{REDIS_PORT}},
            'password': '{{REDIS_PASSWORD}}'
        }
    }
}

###########
## Cache ##
###########

SENTRY_CACHE = 'sentry.cache.redis.RedisCache'
# SENTRY_CACHE_BACKEND = 'default'

DEBUG=False


#LOGGING = {
#    'version': 1,
#    'disable_existing_loggers': True,
#    'root': {
#        'level': 'DEBUG',
#        'handlers': ['sentry'],
#    },
#    'handlers': {
#        'sentry': {
#            'level': 'DEBUG',
#            'class': 'raven.contrib.django.handlers.SentryHandler',
#        },
#        'mail_admins': {
#            'level': 'DEBUG',
#            'class': 'django.utils.log.AdminEmailHandler',
#        }
#    },
#    'loggers': {
#        'django.request': {
#            'handlers': ['mail_admins'],
#            'level': 'DEBUG',
#            'propagate': True,
#        },
#    }
#}

{{INSTALLED_APPS}}
