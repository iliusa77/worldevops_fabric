server {
    server_name %(domain)s www.%(domain)s;
    root /var/www/%(domain)s/web;

    location / {
        try_files $uri @rewriteapp; # Redirect to app.php if the requested file does not exist.
    }

    # Development rule-set.
    # This rule should only be placed on your development environment.
    # In production, don't include this and don't deploy app_dev.php or config.php.
    location ~ ^/(app_dev|config)\.php(/|$) {
        fastcgi_pass unix:/var/run/php5-fpm.sock;
        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param HTTPS off;
    }

    # Production rule-set.
    location ~ ^/app\.php(/|$) {
        fastcgi_pass unix:/var/run/php5-fpm.sock;
        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param HTTPS off;

        # Prevents URIs that include the front controller. This will 404:
        # http://domain.tld/app.php/some-path
        # Remove the internal directive to allow URIs like this.
        internal;
    }

    # Static files rule-set.
    location ~ \.(js|css|png|jpeg|jpg|gif|ico|swf|flv|pdf|zip)$ {
        # Set rules only if the file actually exists.
        if (-f $request_filename) {
            # Set expiry date to 1 year in the future.
            expires 365d;

            # Further optimize by not logging access to these files.
            access_log off;
        }

        # Rewrite to app.php if the requested file does not exist.
        try_files $uri @rewriteapp;
    }

    # Rewrite rule for PHP files.
    location @rewriteapp {
        rewrite ^(.*)$ /app.php/$1 last;
    }

    error_log /var/log/nginx/%(domain)s-error.log;
    access_log /var/log/nginx/%(domain)s-access.log;
}