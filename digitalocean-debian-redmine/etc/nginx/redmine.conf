# Upstream Ruby process cluster for load balancing
upstream thin_cluster {
    server 127.0.0.1:3000;
}

server {
    listen       %(ip)s:80;
    server_name  %(domain)s;

    access_log  /var/log/nginx/redmine-proxy-access;
    error_log   /var/log/nginx/redmine-proxy-error;

    include redmine.proxy;
    root %(public)s;
    proxy_redirect off;

    # Send sensitive stuff via https
    # rewrite ^/login(.*) https://%(domain)s$request_uri permanent;
    # rewrite ^/my/account(.*) https://%(domain)s$request_uri permanent;
    # rewrite ^/my/password(.*) https://%(domain)s$request_uri permanent;
    # rewrite ^/admin(.*) https//%(domain)s$request_uri permanent;

    location / {
        try_files $uri/index.html $uri.html $uri @cluster;
    }

    location @cluster {
        proxy_pass http://thin_cluster;
    }
}
server {
    listen       %(ip)s:443;
    server_name  %(domain)s;

    access_log  /var/log/nginx/redmine-ssl-proxy-access;
    error_log   /var/log/nginx/redmine-ssl-proxy-error;

    ssl on;

    ssl_certificate /etc/ssl/localcerts/%(project)s.pem;
    ssl_certificate_key /etc/ssl/localcerts/%(project)s.key;

    include redmine.proxy;
    proxy_redirect off;
    root %(public)s;

    # When we're back to non-sensitive things, send back to http
    rewrite ^/$ http://%(domain)s$request_uri permanent;

    # Examples of URLs we don't want to rewrite (otherwise 404 errors occur):
    # /projects/PROJECTNAME/archive?status=
    # /projects/copy/PROJECTNAME
    # /projects/PROJECTNAME/destroy

    # This should exclude those (tested here: http://www.regextester.com/ )
    if ($uri !~* "^/projects/.*(copy|destroy|archive)") {
        rewrite ^/projects(.*) http://%(domain)s$request_uri permanent;
    }

    rewrite ^/guide(.*) http://%(domain)s$request_uri permanent;
    rewrite ^/users(.*) http://%(domain)s$request_uri permanent;
    rewrite ^/my/page(.*) http://%(domain)s$request_uri permanent;
    rewrite ^/logout(.*) http://%(domain)s$request_uri permanent;

    location / {
        try_files $uri/index.html $uri.html $uri @cluster;
    }

    location @cluster {
        proxy_pass http://thin_cluster;
    }
}
