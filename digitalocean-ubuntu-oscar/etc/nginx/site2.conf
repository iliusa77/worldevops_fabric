upstream serv {
	server unix:/tmp/uwsgi.sock;
}

server {
	listen 80;
	server_name  %(domain);
	rewrite ^/(.*) http://www.%(domain)s/$1 permanent;
}

server {
	listen 80;
	server_name www.%(domain)s;

        root %(docroot)s;


	location ~* \.(js|css|ico)$ {
		expires 1y;
		log_not_found off;
	}


	location ~ ^/(static|media)/ {
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_redirect off;
		if (!-f $request_filename) {
			proxy_pass http://www.%(domain)s;
		}
	}

	location / {
		uwsgi_pass serv;
		include uwsgi_params;
	}
}

# the upstream component nginx needs to connect to
#upstream django {
#    server unix:/tmp/%s.sock;
#}

## configuration of the server
#server {
#    listen      80;
#    server_name %s;
#    charset     utf-8;
#    # max upload size
#    client_max_body_size 75M;   # adjust to taste
#    # Django media
#    location /media  {
#        alias /var/www/apps/%s/%s/media;  # your Django project's media files - amend as required
#    }
#    location /static {
#        alias /home/%s/apps/static; # your Django project's static files - amend as required
#    }
#    # Finally, send all non-media requests to the Django server.
#    location / {
#        uwsgi_pass  django;
#        include uwsgi_params;
#        uwsgi_param UWSGI_SCHEME $scheme;
#        uwsgi_param UWSGI_PYHOME %s;
#        uwsgi_param UWSGI_CHDIR %s;
#        uwsgi_param UWSGI_MODULE app;
#        uwsgi_param UWSGI_CALLABLE app;
#        error_page 404 /404.html;
#        }
#}''' % (DOMAIN_NAME, PROJECT_NAME, PROJECT_NAME, APP_NAME, NEW_OPERATING_SYSTEM_USER, VIRTUALENV_PATH, PROJECT_PATH)
